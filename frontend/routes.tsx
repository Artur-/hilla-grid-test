import MainLayout from "Frontend/MainLayout.js";
import { lazy } from "react";
import {
  createBrowserRouter,
  IndexRouteObject,
  NonIndexRouteObject,
  useMatches,
} from "react-router-dom";
import GridWithFilter from "./views/GridWithFilter";
import GridWithHeaderFilters from "./views/GridWithHeaderFilters";
import MasterDetail from "./views/ListDetail";
import MasterDetailDeepLinking from "./views/ListDetailDeepLinking";
import ListDetailDeepLinking from "./views/ListDetailDeepLinking";
import ListDetail from "./views/ListDetail";
import ListDetailCustomForm from "./views/ListDetailCustomForm";
import ListDetailCustomAutoGeneratedForm from "./views/ListDetailCustomAutoGeneratedForm";

const ReadOnlyGrid = lazy(async () => import("Frontend/views/ReadOnlyGrid.js"));
export type MenuProps = Readonly<{
  icon?: string;
  title?: string;
}>;

export type ViewMeta = Readonly<{ handle?: MenuProps }>;

type Override<T, E> = Omit<T, keyof E> & E;

export type IndexViewRouteObject = Override<IndexRouteObject, ViewMeta>;
export type NonIndexViewRouteObject = Override<
  Override<NonIndexRouteObject, ViewMeta>,
  {
    children?: ViewRouteObject[];
  }
>;
export type ViewRouteObject = IndexViewRouteObject | NonIndexViewRouteObject;

type RouteMatch = ReturnType<typeof useMatches> extends (infer T)[] ? T : never;

export type ViewRouteMatch = Readonly<Override<RouteMatch, ViewMeta>>;

export const useViewMatches = useMatches as () => readonly ViewRouteMatch[];

export const routes: readonly ViewRouteObject[] = [
  {
    element: <MainLayout />,
    handle: { icon: "null", title: "Main" },
    children: [
      {
        path: "/",
        element: <></>,
      },
      {
        path: "/readonly-grid",
        element: <ReadOnlyGrid />,
        handle: { icon: "file", title: "Read only grid" },
      },
      {
        path: "/filter-grid",
        element: <GridWithFilter />,
        handle: { icon: "file", title: "Grid with filters" },
      },
      {
        path: "/header-filter-grid",
        element: <GridWithHeaderFilters />,
        handle: { icon: "file", title: "Grid with header filters" },
      },
      //   {
      //     path: "/test",
      //     element: <TestView />,
      //     handle: { icon: "file", title: "Test" },
      //   },
      {
        path: "/list-detail",
        element: <ListDetail />,
        handle: { icon: "file", title: "List detail" },
      },
      {
        path: "/list-detail-deep-linking",
        element: <ListDetailDeepLinking />,
        handle: { icon: "file", title: "List detail with deep linking" },
      },
      {
        path: "/list-detail-custom-form",
        element: <ListDetailCustomForm />,
        handle: { icon: "file", title: "List detail with custom form" },
      },
      {
        path: "/list-detail-custom-auto-form",
        element: <ListDetailCustomAutoGeneratedForm />,
        handle: { icon: "file", title: "List detail with custom (auto) form" },
      },
    ],
  },
];

const router = createBrowserRouter([...routes]);
export default router;
