import { setLocale } from "Frontend/features/applicationconfiguration";
import {
  defineCustomFormatter,
  getTypeFormatter,
} from "Frontend/features/formatter";
import * as PersonEndpoint from "Frontend/generated/PersonEndpoint-modified.js";
import Crud from "../features/Crud";
import { HorizontalLayout } from "@hilla/react-components/HorizontalLayout.js";
import { TextField } from "@hilla/react-components/TextField.js";
import { VerticalLayout } from "@hilla/react-components/VerticalLayout.js";
import { useAutoCrud } from "Frontend/features/util";
import Person from "Frontend/generated/com/example/application/endpoint/Person";
import { DatePicker } from "@hilla/react-components/DatePicker.js";
import { getProperties } from "Frontend/features/modelutil";
import { createField } from "Frontend/features/field-factory";

export default function ListDetailCustomAutoGeneratedForm() {
  const crud = useAutoCrud<Person>(PersonEndpoint, (form, buttons) => {
    return (
      <div
        style={{
          display: "flex",
          flexWrap: "wrap",
          maxWidth: "50%",
          alignContent: "flex-start",
          gap: "1em",
          margin: "1em",
        }}
      >
        {getProperties(form.model.constructor).map((property) =>
          createField(property, {})
        )}
        <div style={{ width: "100%" }}></div>
        {buttons}
      </div>
    );
  });
  return (
    <>
      <Crud {...crud} style={{ height: "100%" }}></Crud>
    </>
  );
}
setLocale("fi");
defineCustomFormatter("intToEuros", (value: number) => {
  return getTypeFormatter("Integer")!(value / 100) + " â‚¬";
});
